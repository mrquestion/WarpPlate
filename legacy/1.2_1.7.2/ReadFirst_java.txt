/**
 * @class CustomPlugin.java
 *   기본 구조
 */
public class CustomPlugin extends JavaPlugin implements Listener {
	/* 지금까지 사용하던 Overrided methods */
	/**
	 * @method onEnable(), onDisable()
	 *   만든 plugin.jar 파일을 서버 plugins 폴더에 넣고
	 *   서버를 다시 켜거나 reload 명령을 내리면
	 *   현재 적용되어 있는 플러그인 모두를 disable 하고
	 *   plugins 폴더의 플러그인을 모두 enable 하면서 불러와지는 메소드
	 */
	@Override
	public void onEnable() {
		/**
		 * @method registerEvents(JavaPlugin, Listener)
		 *   서버에 register 하는 과정
		 *   리스너를 따로 구현해도 좋으나...
		 */
		getServer().getPluginManager().registerEvents(this, this);
	}
	@Override
	public void onDisable() {
	}
	
	/**
	 * @method onCommand(CommandSender sender, Command command, String label, String[] args)
	 *   플레이어가 /명령어 하거나
	 *   서버에서 명령어 입력 시 실행
	 *   Command 객체가 따로 들어오기 때문에 args[0]은 명령어 문자열이 아님
	 * @return boolean
	 *   아마도 명령어 가로채고 끝내는지 여부...?
	 */
	@Override
	public boolean onCommand(CommandSender sender, Command command, String label, String[] args) {
	}
	
	/* 그 외 Callback? 들 */
	/**
	 * @method onPlayerJoin()
	 *   player join
	 */
	@EventHandler (priority = EventPriority.MONITOR)
	public void onPlayerJoin(PlayerJoinEvent pje) {
	}
	/**
	 * @method onPlayerInteract()
	 *   플레이어가 블럭을 좌, 우클릭 하거나 허궁에 삽질하거나
	 */
	@EventHandler (priority = EventPriority.LOWEST)
	public void onPlayerInteract(PlayerInteractEvent pie) {
	}
	/**
	 * @method onBlockPlace()
	 *   블럭 설치 시
	 */
	@EventHandler (priority = EventPriority.HIGHEST)
	public void onBlockPlace(BlockPlaceEvent bpe) {
	}
	/**
	 * @method onBlockBreak()
	 *   ㅇㅇ 방금 떠오른 그것
	 */
	@EventHandler (priority = EventPriority.HIGHEST)
	public void onBlockBreak(BlockBreakEvent bbe) {
	}
}